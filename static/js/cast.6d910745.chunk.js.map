{"version":3,"file":"static/js/cast.6d910745.chunk.js","mappings":"0NACA,EAA6B,yB,kBCyD7B,EApDa,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QACd,GAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAWA,OATAC,EAAAA,EAAAA,YAAU,WACJR,IACFK,EAAU,WACVI,EAAAA,GAAsBT,GACnBU,MAAK,SAAAC,GAAQ,OAAIR,EAAQQ,EAAST,QAAOG,EAAU,aACnDO,OAAM,SAAAN,GAAK,OAAIC,EAASD,SAE5B,CAACN,KAGF,gCACc,YAAXI,IACC,SAAC,KAAD,CACES,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAGD,aAAXb,GAAyBF,IACxB,wBACGA,EAAKgB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,aAAcC,EAArB,EAAqBA,KAAMC,EAA3B,EAA2BA,UAA3B,OACR,2BACE,gBACEC,UAAWC,EACXC,IACEL,EAAY,yCAC0BA,GAClCM,EAENC,IAAI,WAEN,6BAAKN,MACL,uCAAeC,OAXRH,QAgBH,aAAXf,GAAyC,IAAhBF,EAAK0B,SAC7B,2DAEU,aAAXxB,IAAyB,0BAAKE,GAASA,EAAMuB,QAApB,Y","sources":["webpack://goit-react-hw-05-movies/./src/components/Cast/Cast.module.css?c9ee","components/Cast/Cast.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"actorPhoto\":\"Cast_actorPhoto__kVLWr\"};","import { useState, useEffect } from 'react';\nimport {Circles} from 'react-loader-spinner';\nimport * as API from '../../api/API';\nimport s from './Cast.module.css';\nimport icon from '../icons/icon.png';\n\nconst Cast = ({ movieId }) => {\n  const [cast, setCast] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    if (movieId) {\n      setStatus('pending');\n      API.fetchMovieCredits(movieId)\n        .then(response => setCast(response.cast), setStatus('resolved'))\n        .catch(error => setError(error));\n    }\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && (\n        <Circles\n          type=\"Circles\"\n          color=\"#2196f3\"\n          height={70}\n          width={70}\n          timeout={2000}\n        />\n      )}\n      {status === 'resolved' && cast && (\n        <ul>\n          {cast.map(({ id, profile_path, name, character }) => (\n            <li key={id}>\n              <img\n                className={s.actorPhoto}\n                src={\n                  profile_path\n                    ? `https://image.tmdb.org/t/p/w342${profile_path}`\n                    : icon\n                }\n                alt=\"actor\"\n              />\n              <p> {name}</p>\n              <p>Character: {character}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {status === 'resolved' && cast.length === 0 && (\n        <p>There is no cast for this movie</p>\n      )}\n      {status === 'rejected' && <h1>{error && error.message} </h1>}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["movieId","useState","cast","setCast","status","setStatus","error","setError","useEffect","API","then","response","catch","type","color","height","width","timeout","map","id","profile_path","name","character","className","s","src","icon","alt","length","message"],"sourceRoot":""}