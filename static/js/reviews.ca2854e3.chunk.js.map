{"version":3,"file":"static/js/reviews.ca2854e3.chunk.js","mappings":"qLAmCA,UA/BgB,SAAC,GAAiB,IAAfA,EAAc,EAAdA,QAEjB,GAA8BC,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KAOA,OALAC,EAAAA,EAAAA,YAAU,WACRC,EAAAA,GAAsBT,GACnBU,MAAK,SAAAC,GAAQ,OAAIR,EAAWQ,EAASC,WAAUP,EAAU,aACzDQ,OAAM,SAAAP,GAAK,OAAIC,EAASD,QAC1B,CAACN,KAEF,gCACc,aAAXI,GAAyBF,IACxB,wBACGA,EAAQY,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,OAAQC,EAAf,EAAeA,QAAf,OACX,2BACE,wBAAKD,KACL,uBAAIC,MAFGF,QAOH,aAAXX,GAA4C,IAAnBF,EAAQgB,SAChC,8DAEU,aAAXd,IAAyB,0BAAKE,GAASA,EAAMa,QAApB","sources":["components/Reviews/Reviews.jsx"],"sourcesContent":["import { useState, useEffect } from 'react';\n\nimport * as API from '../../api/API';\n\nconst Reviews = ({ movieId }) => {\n  // const { path } = useMatch();\n  const [reviews, setReviews] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    API.fetchMovieReviews(movieId)\n      .then(response => setReviews(response.results), setStatus('resolved'))\n      .catch(error => setError(error));\n  }, [movieId]);\n  return (\n    <>\n      {status === 'resolved' && reviews && (\n        <ul>\n          {reviews.map(({ id, author, content }) => (\n            <li key={id}>\n              <h3>{author}</h3>\n              <p>{content}</p>\n            </li>\n          ))}\n        </ul>\n      )}\n      {status === 'resolved' && reviews.length === 0 && (\n        <p>There is no reviews for this movie</p>\n      )}\n      {status === 'rejected' && <h1>{error && error.message} </h1>}\n    </>\n  );\n};\n\nexport default Reviews;\n"],"names":["movieId","useState","reviews","setReviews","status","setStatus","error","setError","useEffect","API","then","response","results","catch","map","id","author","content","length","message"],"sourceRoot":""}