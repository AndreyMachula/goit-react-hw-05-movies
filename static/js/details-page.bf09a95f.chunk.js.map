{"version":3,"file":"static/js/details-page.bf09a95f.chunk.js","mappings":"sSAAMA,EAAW,gCACXC,EAAU,2CAET,SAAeC,IAAtB,4CAAO,OAAP,oBAAO,6FACCC,EADD,UACUH,EADV,6BACuCC,GADvC,SAEkBG,MAAMD,GAFxB,YAECE,EAFD,QAIWC,GAJX,iCAKKD,EAASE,OALd,gDAMDC,QAAQC,OAAO,IAAIC,MAAJ,uBANd,0GASA,SAAeC,EAAtB,+CAAO,OAAP,oBAAO,WAAoCC,GAApC,gFACCT,EADD,YAELH,EAFK,wBAEmBC,EAFnB,iCAEmDW,EAFnD,wCAGkBR,MAAMD,GAHxB,YAGCE,EAHD,QAIWC,GAJX,iCAKKD,EAASE,OALd,gDAMDC,QAAQC,OAAO,IAAIC,MAAJ,uBANd,0GASA,SAAeG,EAAtB,+CAAO,OAAP,oBAAO,WAAiCC,GAAjC,gFACCX,EADD,YAELH,EAFK,iBAEYc,EAFZ,YAEuBb,EAFvB,4BAGkBG,MAAMD,GAHxB,YAGCE,EAHD,QAIWC,GAJX,iCAKKD,EAASE,OALd,gDAMDC,QAAQC,OAAO,IAAIC,MAAJ,2BANd,0GASA,SAAeK,EAAtB,+CAAO,OAAP,oBAAO,WAAiCD,GAAjC,gFACCX,EADD,YAELH,EAFK,iBAEYc,EAFZ,oBAE+Bb,EAF/B,4BAGkBG,MAAMD,GAHxB,YAGCE,EAHD,QAIWC,GAJX,iCAKKD,EAASE,OALd,gDAMDC,QAAQC,OAAO,IAAIC,MAAJ,qBANd,0GASA,SAAeM,EAAtB,+CAAO,OAAP,oBAAO,WAAiCF,GAAjC,gFACCX,EADD,YAELH,EAFK,iBAEYc,EAFZ,oBAE+Bb,EAF/B,4BAGkBG,MAAMD,GAHxB,YAGCE,EAHD,QAIWC,GAJX,iCAKKD,EAASE,OALd,gDAMDC,QAAQC,OAAO,IAAIC,MAAJ,uCANd,4G,2HCtCP,GAAgB,OAAS,iCAAiC,eAAiB,yCAAyC,WAAa,qCAAqC,UAAY,oCAAoC,SAAW,mCAAmC,UAAY,qC,SCY1QO,GAAOC,EAAAA,EAAAA,OAAK,kBAAM,+BAClBC,GAAUD,EAAAA,EAAAA,OAAK,kBACnB,gCAuIF,EApIyB,WAAO,IAAD,cACrBE,GAASC,EAAAA,EAAAA,MAATD,KAEFE,GAAWC,EAAAA,EAAAA,MACXC,GAAWC,EAAAA,EAAAA,MAEjB,GAAkCC,EAAAA,EAAAA,UAAS,IAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA4BF,EAAAA,EAAAA,UAAS,QAArC,eAAOG,EAAP,KAAeC,EAAf,KACA,GAA0BJ,EAAAA,EAAAA,UAAS,MAAnC,eAAOK,EAAP,KAAcC,EAAd,KACMlB,EAAUM,EAAKa,MAAM,cAAc,GAGvCC,EAOEP,EAPFO,YAEAC,EAKER,EALFQ,MACAC,EAIET,EAJFS,aACAC,EAGEV,EAHFU,aACAC,EAEEX,EAFFW,SACAC,EACEZ,EADFY,OAgBF,OAbAC,EAAAA,EAAAA,YAAU,WACQ,KAAZ1B,IAGJgB,EAAU,WACVW,EAAAA,GAAsB3B,GACnB4B,KAAKd,EAAcE,EAAU,aAC7Ba,OAAM,SAAAZ,GACLC,EAASD,GACTD,EAAU,kBAEb,CAAChB,KAGF,gCACc,YAAXe,IACC,SAAC,KAAD,CACEe,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAGD,aAAXnB,IACC,iCACE,mBACEe,KAAK,SACLK,QAAS,WAAO,IAAD,MACb3B,EAAQ,iBAACE,QAAD,IAACA,GAAD,UAACA,EAAU0B,aAAX,iBAAC,EAAiBC,YAAlB,aAAC,EAAuB3B,gBAAxB,QAAoC,MAE9C4B,UAAWC,EAAAA,UALb,0BAOG7B,QAPH,IAOGA,GAPH,UAOGA,EAAU0B,aAPb,iBAOG,EAAiBC,YAPpB,aAOG,EAAuBG,aAP1B,QAOmC,aAEnC,iBAAKF,UAAWC,EAAAA,eAAhB,WACE,gBACED,UAAWC,EAAAA,OACXE,IACErB,GAAW,yCAAsCA,GAEnDsB,IAAI,YAGN,iBAAKJ,UAAWC,EAAAA,cAAhB,WACE,0BACGlB,EADH,KACY,IAAIsB,KAAKrB,GAAcsB,cADnC,QAGA,mBACA,wCAAgBrB,MAEhB,sCAEA,uBAAIC,KAEJ,oCACA,eAAIc,UAAWC,EAAAA,WAAf,SACGd,GACCA,EAAOoB,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,KAAP,OACT,eAAaT,UAAWC,EAAAA,UAAxB,SACGQ,GADMD,eAOnB,mBACA,mDACA,SAAC,KAAD,CACEE,GAAE,SACFZ,MAAO,CAAEC,KAAI,iBAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAU0B,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KACxCC,UAAWC,EAAAA,SAHb,mBAOA,SAAC,KAAD,CACES,GAAE,YACFZ,MAAO,CAAEC,KAAI,iBAAE3B,QAAF,IAAEA,GAAF,UAAEA,EAAU0B,aAAZ,aAAE,EAAiBC,YAAnB,QAA2B,KACxCC,UAAWC,EAAAA,YAHb,sBAOA,mBAEA,SAAC,EAAAU,SAAD,CACEC,UACE,SAAC,KAAD,CACEpB,KAAK,UACLC,MAAM,UACNC,OAAQ,GACRC,MAAO,GACPC,QAAS,MAPf,UAWE,UAAC,KAAD,YACE,SAAC,KAAD,CAAOiB,KAAK,SAASC,SAAS,SAACjD,EAAD,CAAMH,QAASA,OAC7C,SAAC,KAAD,CACEmD,KAAK,YACLC,SAAS,SAAC/C,EAAD,CAASL,QAASA,cAOzB,aAAXe,IAAyB,wBAAKE,EAAMoC","sources":["api/API.js","webpack://goit-react-hw-05-movies/./src/components/MovieDetailsPage/MovieDetailsPage.module.css?377f","components/MovieDetailsPage/MovieDetailsPage.jsx"],"sourcesContent":["const BASE_URL = \"https://api.themoviedb.org/3/\";\nconst API_KEY = \"api_key=35c56f9aec5ac00d9749e544b1426fe8\";\n\nexport async function fetchPopularMovies() {\n  const url = `${BASE_URL}/trending/all/day?${API_KEY}`;\n  const response = await fetch(url);\n\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`There is no movies`));\n}\n\nexport async function fetchMoviesByKeyword(searchQuery) {\n  const url = `\n${BASE_URL}search/movie?${API_KEY}&language=en-US&query=${searchQuery}&page=1&include_adult=false`;\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`There is no movies`));\n}\n\nexport async function fetchMovieDetails(movieId) {\n  const url = `\n${BASE_URL}movie/${movieId}?${API_KEY}&language=en-US`;\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`There is no movie data`));\n}\n\nexport async function fetchMovieCredits(movieId) {\n  const url = `\n${BASE_URL}movie/${movieId}/credits?${API_KEY}&language=en-US`;\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`There is no data`));\n}\n\nexport async function fetchMovieReviews(movieId) {\n  const url = `\n${BASE_URL}movie/${movieId}/reviews?${API_KEY}&language=en-US`;\n  const response = await fetch(url);\n  return response.ok\n    ? await response.json()\n    : Promise.reject(new Error(`There is no reviews for this movie`));\n}","// extracted by mini-css-extract-plugin\nexport default {\"poster\":\"MovieDetailsPage_poster__Q+ne9\",\"movieContainer\":\"MovieDetailsPage_movieContainer__-tSGn\",\"genresList\":\"MovieDetailsPage_genresList__tLUhk\",\"genreItem\":\"MovieDetailsPage_genreItem__cUiy5\",\"castLink\":\"MovieDetailsPage_castLink__D3FGE\",\"goBackBtn\":\"MovieDetailsPage_goBackBtn__L3ooX\"};","import { useState, useEffect, lazy, Suspense } from 'react';\nimport {\n  useParams,\n  useNavigate,\n  useLocation,\n  Routes,\n  Route,\n  Link,\n} from 'react-router-dom';\nimport {Circles} from 'react-loader-spinner';\nimport * as API from '../../api/API';\nimport s from './MovieDetailsPage.module.css';\n\nconst Cast = lazy(() => import('../Cast/Cast' /* webpackChunkName: 'cast' */));\nconst Reviews = lazy(() =>\n  import('../Reviews/Reviews' /* webpackChunkName: 'reviews' */)\n);\n\nconst MovieDetailsPage = () => {\n  const { slug } = useParams();\n\n  const navigate = useNavigate();\n  const location = useLocation();\n\n  const [movieData, setMovieData] = useState([]);\n  const [status, setStatus] = useState('idle');\n  const [error, setError] = useState(null);\n  const movieId = slug.match(/[a-z0-9]+$/)[0];\n\n  const {\n    poster_path,\n\n    title,\n    release_date,\n    vote_average,\n    overview,\n    genres,\n  } = movieData;\n\n  useEffect(() => {\n    if (movieId === '') {\n      return;\n    }\n    setStatus('pending');\n    API.fetchMovieDetails(movieId)\n      .then(setMovieData, setStatus('resolved'))\n      .catch(error => {\n        setError(error);\n        setStatus('rejected');\n      });\n  }, [movieId]);\n\n  return (\n    <>\n      {status === 'pending' && (\n        <Circles\n          type=\"Circles\"\n          color=\"#2196f3\"\n          height={70}\n          width={70}\n          timeout={2000}\n        />\n      )}\n      {status === 'resolved' && (\n        <>\n          <button\n            type=\"button\"\n            onClick={() => {\n              navigate(location?.state?.from?.location ?? '/');\n            }}\n            className={s.goBackBtn}\n          >\n            {location?.state?.from?.label ?? 'Go back'}\n          </button>\n          <div className={s.movieContainer}>\n            <img\n              className={s.poster}\n              src={\n                poster_path && `https://image.tmdb.org/t/p/w342${poster_path}`\n              }\n              alt=\"poster\"\n            />\n\n            <div className={s.infoContainer}>\n              <h1>\n                {title} ({new Date(release_date).getFullYear()})\n              </h1>\n              <hr />\n              <p>User score: {vote_average}</p>\n\n              <h2>Overview</h2>\n\n              <p>{overview}</p>\n\n              <h3>Genres</h3>\n              <ul className={s.genresList}>\n                {genres &&\n                  genres.map(({ id, name }) => (\n                    <li key={id} className={s.genreItem}>\n                      {name}\n                    </li>\n                  ))}\n              </ul>\n            </div>\n          </div>\n          <hr />\n          <p>Additional information</p>\n          <Link\n            to={`./cast`}\n            state={{ from: location?.state?.from ?? '/' }}\n            className={s.castLink}\n          >\n            Cast\n          </Link>\n          <Link\n            to={`./reviews`}\n            state={{ from: location?.state?.from ?? '/' }}\n            className={s.reviewsLink}\n          >\n            Reviews\n          </Link>\n          <hr />\n\n          <Suspense\n            fallback={\n              <Circles\n                type=\"Circles\"\n                color=\"#2196f3\"\n                height={70}\n                width={70}\n                timeout={2000}\n              />\n            }\n          >\n            <Routes>\n              <Route path=\"cast/*\" element={<Cast movieId={movieId} />}></Route>\n              <Route\n                path=\"reviews/*\"\n                element={<Reviews movieId={movieId} />}\n              ></Route>\n            </Routes>\n          </Suspense>\n        </>\n      )}\n\n      {status === 'rejected' && <h1>{error.message}</h1>}\n    </>\n  );\n};\n\nexport default MovieDetailsPage;\n"],"names":["BASE_URL","API_KEY","fetchPopularMovies","url","fetch","response","ok","json","Promise","reject","Error","fetchMoviesByKeyword","searchQuery","fetchMovieDetails","movieId","fetchMovieCredits","fetchMovieReviews","Cast","lazy","Reviews","slug","useParams","navigate","useNavigate","location","useLocation","useState","movieData","setMovieData","status","setStatus","error","setError","match","poster_path","title","release_date","vote_average","overview","genres","useEffect","API","then","catch","type","color","height","width","timeout","onClick","state","from","className","s","label","src","alt","Date","getFullYear","map","id","name","to","Suspense","fallback","path","element","message"],"sourceRoot":""}